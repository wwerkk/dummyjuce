name: GH Continuous Benchmark

on:
  workflow_dispatch: # lets you run a build from the UI
  push:
    # branches:
      # - main

env:
  BUILD_TYPE: Release
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CMAKE_BUILD_PARALLEL_LEVEL: 3 # Use up to 3 cpus to build juceaide, etc
  HOMEBREW_NO_INSTALL_CLEANUP: 1

permissions:
  contents: write
  deployments: write

jobs:
  benchmark:
    name: Run C++ benchmark example
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build and run benchmarks with Catch2
        run: |
          git submodule update --init
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          cmake --build . --target Benchmarks --config Release
          ./Benchmarks | tee ../benchmark_result.txt

      # - name: Store benchmark result
      #   uses: benchmark-action/github-action-benchmark@v1
      #   with:
      #     name: Catch2 Benchmark
      #     tool: "catch2"
      #     output-file-path: benchmark_result.txt
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     auto-push: true
      #     # Show alert with commit comment on detecting possible performance regression
      #     alert-threshold: "200%"
      #     comment-on-alert: true
      #     fail-on-alert: true
      #     alert-comment-cc-users: "@wwerkk"

      # - name: Store benchmark result - separate results repo
      #   uses: benchmark-action/github-action-benchmark@v1
      #   with:
      #     name: Catch2 Benchmark
      #     tool: "catch2"
      #     output-file-path: benchmark_result.txt
      #     github-token: ${{ secrets.BENCHMARK_ACTION_BOT_TOKEN }}
      #     auto-push: true
      #     # Show alert with commit comment on detecting possible performance regression
      #     alert-threshold: "200%"
      #     comment-on-alert: true
      #     fail-on-alert: true
      #     alert-comment-cc-users: "@wwerkk"
      #     gh-repository: "https://github.com/wwerkk/dummyjuce"
